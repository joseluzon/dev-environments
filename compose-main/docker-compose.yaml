version: '3.8'

services:
  devenv-java:
    image: joseluzon/java-zulu_jdk17
    container_name: dev-java
    restart: always
    tty: true
    environment:
      DISPLAY: 172.30.240.1:0
    ports:
      - 8810:8810
    networks:
      - devenv_network
    volumes:
      - devenv-java-workspace:/workspace/
      - devenv-m2:/root/.m2
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  devenv-cpp:
    image: joseluzon/cpp-conan
    container_name: devenv-cpp
    restart: always
    tty: true
    environment:
      DISPLAY: 172.30.240.1:0
    ports:
      - 8820:8820
    networks:
      - devenv_network
    volumes:
      - devenv-cpp-workspace:/workspace
      - devenv-conan:/root/.conan
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  devenv-node:
    image: joseluzon/nodejs16
    container_name: devenv-node
    restart: always
    tty: true
    ports:
      - 8830:8830
    networks:
      - devenv_network
    volumes:
      - devenv-node-workspace:/workspace
      - devenv-node_modules:/workspace/node_modules
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  devenv-python3:
    image: joseluzon/python3-base
    container_name: devenv-python3
    restart: always
    tty: true
    ports:
      - 8840:8840
      - 8841:8841
    networks:
      - devenv_network
    volumes:
      - devenv-python-workspace:/workspace
      - devenv-python-virtualenvs:/root/.local/share/virtualenvs
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  cv-latex:
    image: joseluzon/cv-latex
    container_name: cv-latex
    restart: always
    tty: true
    ports:
      - 8840:8840
    networks:
      - devenv_network
    volumes:
      - cv-latex-workspace:/workspace
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G

  rdcs:
    image: centos7-base:latest
    container_name: rdcs
    restart: always
    tty: true
    privileged: true
    ports: 
        - 4444:4444
        - 4445:4445
    volumes: 
        - ~/.devel/rdcs/ltr25-ea/ltr25:/ltr25-ea
    networks:
        - devenv_network
  
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports: 
        - 8850:27017
    volumes: 
        - ~/.devel/db/mongodb/data:/data
    environment: 
        - MONGO_INITDB_ROOT_USERNAME=rootuser
        - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
        - devenv_network

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
        - 8081:8081
    environment:
        - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
        - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
        - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
        - devenv_network

  postgresql:
    image: timescale/timescaledb-ha:pg14-latest
    container_name: postgresql
    environment:
      POSTGRES_USER: devel
      POSTGRES_PASSWORD: devel
      POSTGRES_DB: develdb
      ALLOW_IP_RANGE: 0.0.0.0/0
    restart: always
    volumes:
      - ~/.devel/db/r2dbc/postgresql/data:/var/lib/postgresql/data
      - ~/.devel/db/r2dbc/postgresql/schema:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=devel@devel.es
      - PGADMIN_DEFAULT_PASSWORD=devel
    ports:
      - 8000:80
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_TICK_TIME: '2000'
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
      - '29093:29093'
      - '9093:9093'
      - "29094:29094"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: '1'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:29092,PLAINTEXT_HOST://localhost:9092,SSL://kafka-broker-1:29093,SSL_HOST://localhost:9093,DOCKER://host.docker.internal:29094
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Defaults to 10080 (7 days) -> devel just 1 minute
      KAFKA_OFFSETS_RETENTION_MINUTES: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
      # SSL:
      KAFKA_SSL_KEYSTORE_FILENAME: 'kafka.keystore.jks'
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 'keystore_creds'
      KAFKA_SSL_KEY_CREDENTIALS: 'sslkey_creds'
      KAFKA_SSL_TRUSTSTORE_FILENAME: 'kafka.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 'truststore_creds'
      KAFKA_SSL_CLIENT_AUTH: 'required'
      #KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN'
      #KAFKA_SASL_ENABLED_MECHANISMS: 'PLAIN,SCRAM-SHA-256,SCRAM-SHA-512'
      #KAFKA_OPTS: '-Djava.security.auth.login.config=/opt/kafka/config/server-jaas.conf'
      KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      # JMX:
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      # suppress verbosity
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka-broker-1 -Djava.net.preferIPv4Stack=true'
    volumes:
      - ~/.devel/kafka/secrets/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro,z
      - ~/.devel/kafka/secrets/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro,z
      - ~/.devel/kafka/secrets/keystore_creds:/etc/kafka/secrets/keystore_creds:ro,z
      - ~/.devel/kafka/secrets/sslkey_creds:/etc/kafka/secrets/sslkey_creds:ro,z
      - ~/.devel/kafka/secrets/truststore_creds:/etc/kafka/secrets/truststore_creds:ro,z
      - ~/.devel/kafka/topics/init.sh:/etc/kafka/topics/init.sh
    #command: sh -c "kafka-server-start /etc/kafka/server.properties && /etc/kafka/topics/init.sh"
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M

# https://github.com/confluentinc/cp-all-in-one/tree/7.2.2-post/cp-all-in-one-kraft
  kafka-kraft-broker-1:
    image: confluentinc/cp-kafka:7.2.2
    hostname: kafka-kraft-broker-1
    container_name: kafka-kraft-broker-1
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SSL:SSL,SSL_HOST:SSL'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-kraft-broker-1:29092,PLAINTEXT_HOST://localhost:9092,SSL://kafka-kraft-broker-1:29093,SSL_HOST://localhost:9093'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Defaults to 10080 (7 days) -> devel just 1 minute
      KAFKA_OFFSETS_RETENTION_MINUTES: 1
      # SSL:
      # KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_KEYSTORE_FILENAME: 'kafka.keystore.jks'
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 'keystore_creds'
      KAFKA_SSL_KEY_CREDENTIALS: 'sslkey_creds'
      KAFKA_SSL_TRUSTSTORE_FILENAME: 'kafka.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 'truststore_creds'
      KAFKA_SSL_CLIENT_AUTH: 'required'
      # KAFKA_AUTHORIZER_CLASS_NAME: "kafka.security.authorizer.AclAuthorizer"
      # KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      # JMX:
      KAFKA_JMX_PORT: 9999
      #KAFKA_JMX_HOSTNAME: localhost
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      # suppress verbosity
      # https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      #KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9999 -Djava.rmi.server.hostname=kafka-kraft-broker-1 -Djava.net.preferIPv4Stack=true'
      # OTHER
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-kraft-broker-1:29091'
      KAFKA_LISTENERS: 'CONTROLLER://kafka-kraft-broker-1:29091,PLAINTEXT://kafka-kraft-broker-1:29092,PLAINTEXT_HOST://0.0.0.0:9092,SSL://kafka-kraft-broker-1:29093,SSL_HOST://0.0.0.0:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - ~/.devel/kafka/update_run.sh:/tmp/update_run.sh
      - ~/.devel/kafka/secrets/kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro,z
      - ~/.devel/kafka/secrets/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro,z
      - ~/.devel/kafka/secrets/keystore_creds:/etc/kafka/secrets/keystore_creds:ro,z
      - ~/.devel/kafka/secrets/sslkey_creds:/etc/kafka/secrets/sslkey_creds:ro,z
      - ~/.devel/kafka/secrets/truststore_creds:/etc/kafka/secrets/truststore_creds:ro,z
      - ~/.devel/kafka/topics/init.sh:/etc/kafka/topics/init.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run && /etc/kafka/topics/init.sh ; fi'"
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M

  kafka-manager:
    image: sheepkiller/kafka-manager
    container_name: kafka-manager
    depends_on:
      - zookeeper
    user: root
    ports:
      - 9000:9000
    environment:
      - ZK_HOSTS=zookeeper:2181
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - "kafka-kraft-broker-1"
    ports:
      - "9998:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-kraft-broker-1:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    networks:
      - devenv_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

networks:
  devenv_network:
    driver: bridge

volumes:
  devenv-java-workspace:
  devenv-cpp-workspace:
  devenv-node-workspace:
  devenv-python-workspace:
  devenv-python-virtualenvs:
  devenv-conan:
  devenv-m2:
  devenv-node_modules:
  cv-latex-workspace:

    # openldap:
    #     image: docker.io/bitnami/openldap:2.6
    #     container_name: openldap
    #     ports:
    #         - '8002:1389'
    #         - '8003:1636'
    #     environment:
    #         - LDAP_ADMIN_USERNAME=devel
    #         - LDAP_ADMIN_PASSWORD=devel
    #         - LDAP_USERS=devel01,devel02
    #         - LDAP_PASSWORDS=devel01,devel02
    #     volumes:
    #         - ~/.devel/ldap/openldap_data:/bitnami/openldap
    #     networks:
    #         - devenv_network

    # elasticsearch:
    #     image: elasticsearch:7.16.2
    #     container_name: elasticsearc
    #     user: elasticsearch
    #     restart: always
    #     volumes:
    #         - ~/.devel/elasticsearch/data/:/usr/share/elasticsearch/data/:rw
    #     environment:
    #         ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    #         discovery.type: single-node    
    #     ports:
    #         - '9200:9200'
    #         - '9300:9300'
    #     networks:
    #         - devenv_network

    # logstash:
    #     image: logstash:7.16.2
    #     container_name: logstash
    #     user: logstash
    #     restart: always
    #     volumes:
    #         - ~/.devel/logstash/conf:/logstash/conf
    #     command: logstash -f /logstash/conf/logstash.conf 
    #     depends_on:
    #         - elasticsearch
    #     ports:
    #         - '9600:9600'
    #     environment:
    #         S_JAVA_OPTS: "-Xmx256m -Xms256m"    
    #     networks:
    #         - devenv_network

    # kibana:
    #     image: kibana:7.16.2
    #     container_name: kibana
    #     restart: always       
    #     ports:
    #         - '5601:5601'
    #     environment:
    #         - ELASTICSEARCH_URL=http://elasticsearch:9200  
    #     depends_on:
    #         - elasticsearch  
    #     networks:
    #         - devenv_network

    # https://www.vinsguru.com/grpc-load-balancing-with-nginx/
    # nginx:
    #   image: nginx:1.15-alpine
    #   depends_on:
    #     - grpc-server1
    #     - grpc-server2    
    #   volumes:
    #     - ./nginx-conf/conf:/etc/nginx/conf.d
    #   ports:
    #     - 6565:6565
